!
! Determine continuum flux and source size by uv_fit
!
! Last modified: March 28 2016
!
! History:
!   Mar 28 2016:
!       fit a point source model as foreground to subtract
!       After subtracting the point source, the residual looks like noise (see co21_trial1_cont.uv_shift-res.lmv)
!   Dec 30 2015:
!       Implement code to run tasks non-interactively in script;
!       Implemented uv_fit after uv_center and uv_shift.
!       Also fitting C_GAUSS and Double Gauss after shifting phase center.
!   Nov 18 2015:
!       First find centroid in UV then shift before uv_fit (To be implemented)
!   Nov 10 2015:
!       created script
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! Recovery mode
on error "return base"

define char UVTname*40
sic\let UVTname = "co21_trial1_cont"
! delete /var UVTname

def char NewPath*50
sic\let NewPath = "/Users/admin/Research/RXJ1131/PdBI/data/10Nov15/"

say ""
say ""
sic DIRECTORY 'NewPath'
sys "pwd"

say "Determine Continuum flux"
let name 'UVTname'
let type lmv-clean
let size 25
let spacing 3*0.0816e-3          ! 3 * 1.451 mJy / sqrt(n_chan)
go nice
go flux

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! uv_fit
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
begin data tmp_uv-fit.init
  !
  TASK\CHARACTER "UVtable name"   UVTABLE$ 'name'".uvt"
  TASK\INTEGER   "Channels: first, last (0,0 for all)" CHANNEL$[2]  'first' 'last'
  TASK\REAL      "UV range (max, min) in meters"  UV_RANGE$[2] 'uvfit%range[1]' 'uvfit%range[2]'
  TASK\INTEGER   "Number of functions" NF$ 'uvfit%nf'
  !
  ! valid functions are POINT, C_GAUSS, E_GAUSS, C_DISK, E_DISK, RING,
  ! EXP, POWER-2, POWER-3
  !
  TASK\CHARACTER "Function #1"       FUNCT01$    'uvfit%funct01'
  TASK\REAL      "Parameters"        PARAM01$[7] 'uvfit%param01[1]' 'uvfit%param01[2]' 'uvfit%param01[3]' 'uvfit%param01[4]' 'uvfit%param01[5]' 'uvfit%param01[6]' 'uvfit%param01[7]'
  TASK\REAL      "Starting range"    RANGE01$[7] 'uvfit%range01[1]' 'uvfit%range01[2]' 'uvfit%range01[3]' 'uvfit%range01[4]' 'uvfit%range01[5]' 'uvfit%range01[6]' 'uvfit%range01[7]'
  TASK\INTEGER   "numb. of starts"   START01$[7] 'uvfit%start01[1]' 'uvfit%start01[2]' 'uvfit%start01[3]' 'uvfit%start01[4]' 'uvfit%start01[5]' 'uvfit%start01[6]' 'uvfit%start01[7]'
  TASK\LOGICAL   "Subtract function" SUBSF01$    'uvfit%subsf01'
  !
  if (uvfit%nf.eq.2) then
     TASK\CHARACTER "Function #2"       FUNCT02$    'uvfit%funct02'
     TASK\REAL      "Parameters"        PARAM02$[7] 'uvfit%param02[1]' 'uvfit%param02[2]' 'uvfit%param02[3]' 'uvfit%param02[4]' 'uvfit%param02[5]' 'uvfit%param02[6]' 'uvfit%param02[7]'
     TASK\REAL      "Starting range"    RANGE02$[7] 'uvfit%range02[1]' 'uvfit%range02[2]' 'uvfit%range02[3]' 'uvfit%range02[4]' 'uvfit%range02[5]' 'uvfit%range02[6]' 'uvfit%range02[7]'
     TASK\INTEGER   "numb. of starts"   START02$[7] 'uvfit%start02[1]' 'uvfit%start02[2]' 'uvfit%start02[3]' 'uvfit%start02[4]' 'uvfit%start02[5]' 'uvfit%start02[6]' 'uvfit%start02[7]'
     TASK\LOGICAL   "Subtract function" SUBSF02$    'uvfit%subsf02'
  else if (uvfit%nf.eq.3) then
     TASK\CHARACTER "Function #3"       FUNCT03$    'uvfit%funct03'
     TASK\REAL      "Parameters"        PARAM03$[7] 'uvfit%param03[1]' 'uvfit%param03[2]' 'uvfit%param03[3]' 'uvfit%param03[4]' 'uvfit%param03[5]' 'uvfit%param03[6]' 'uvfit%param03[7]'
     TASK\REAL      "Starting range"    RANGE03$[7] 'uvfit%range03[1]' 'uvfit%range03[2]' 'uvfit%range03[3]' 'uvfit%range03[4]' 'uvfit%range03[5]' 'uvfit%range03[6]' 'uvfit%range03[7]'
     TASK\INTEGER   "numb. of starts"   START03$[7] 'uvfit%start03[1]' 'uvfit%start03[2]' 'uvfit%start03[3]' 'uvfit%start03[4]' 'uvfit%start03[5]' 'uvfit%start03[6]' 'uvfit%start03[7]'
     TASK\LOGICAL   "Subtract function" SUBSF03$    'uvfit%subsf03'
  else if (uvfit%nf.eq.4) then
     TASK\CHARACTER "Function #4"       FUNCT04$    'uvfit%funct04'
     TASK\REAL      "Parameters"        PARAM04$[7] 'uvfit%param04[1]' 'uvfit%param04[2]' 'uvfit%param04[3]' 'uvfit%param04[4]' 'uvfit%param04[5]' 'uvfit%param04[6]' 'uvfit%param04[7]'
     TASK\REAL      "Starting range"    RANGE04$[7] 'uvfit%range04[1]' 'uvfit%range04[2]' 'uvfit%range04[3]' 'uvfit%range04[4]' 'uvfit%range04[5]' 'uvfit%range04[6]' 'uvfit%range04[7]'
     TASK\INTEGER   "numb. of starts"   START04$[7] 'uvfit%start04[1]' 'uvfit%start04[2]' 'uvfit%start04[3]' 'uvfit%start04[4]' 'uvfit%start04[5]' 'uvfit%start04[6]' 'uvfit%start04[7]'
     TASK\LOGICAL   "Subtract function" SUBSF04$    'uvfit%subsf04'
  endif
  !
  TASK\CHARACTER "fit table name"    RESULT$    'name'".uvfit"
  TASK\CHARACTER "residuals UVtable" RESIDUALS$ 'name'"-res.uvt"
  TASK\GO
  !
end data tmp_uv-fit.init
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

say "Detemine continuum source extent"

let name 'UVTname'
let first 0
let last 0
let uvfit%range 0 800
let uvfit%nf 1
let uvfit%funct01 E_Gauss
let uvfit%param01 1 1 3 4 3 3 1       ! parameters
let uvfit%range01 0 0 0 0 0 0 0       ! starting range
let uvfit%start01 1 1 1 1 1 1 1       ! number of starts
run uv_fit tmp_uv-fit.init /nowindow

! r.m.s.=     0.0124 Jy.
! E_GAUSS  R.A.        =    -2.11931 (   .18227)  11:31:51.4553
! E_GAUSS  Dec.        =    -1.29913 (   .22635) -12:31:58.2991
! E_GAUSS  Flux        =     1.36570 (   .20869)  milliJy
! E_GAUSS  Major       =     3.03174 (594.09415)
! E_GAUSS  Minor       =     0.00362 (   .53387)
! E_GAUSS  Pos.Ang.    =   -72.76842 ( 15.39338)


! ----------------------------------
! with UV_center and shift
! ----------------------------------
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
begin data tmp_uv-center.init
    TASK\CHARACTER "Input (Transposed) UV table" INPUT$ 'name'".uvt"
    TASK\REAL "Search area (Xmin, Xmax, Ymin, Ymax)" -
      LIMITS$[4] -5*SEC 5*SEC -5*SEC 5*SEC
    TASK\INTEGER "First and last channels" CHANNELS$[2] 'first' 'last'
    TASK\INTEGER "Size of grid search" GRID$ 5
    TASK\CHARACTER "Output file name" OUTPUT$ 'name'".uv-center.uvt"
    TASK\GO
end data tmp_uv-center.init
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!

say "running task uv_center to detemine peak emission position"
run uv_center tmp_uv-center.init /nowin
!I-UV_CENTER,  Channel   1 RMS  1.22E+08 Code  2
!   VLSR -6802.8970  X =   Infinity +-   Infinity; Y =   Infinity +-   Infinity (")



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
begin data tmp_uv-shift.init
  TASK\FILE    "UV table to shift"  UVTABLE$ 'uvshift%name'".uv_shift.uvt"
  TASK\LOGICAL "Relative position" RELATIVE$ 'uvshift%relative'
  TASK\REAL "Phase center offset (in radians)" OFFSET$[2] 'uvshift%offset[1]' 'uvshift%offset[2]'
  TASK\CHARACTER "R.A. center"         RA_CENTER$ 'uvshift%ra'
  TASK\CHARACTER "Declination center" DEC_CENTER$ 'uvshift%dec'
  TASK\REAL "Angle" ANGLE$ 'uvshift%angle'
  TASK\LOGICAL "Accuracy" PRECISE$ YES
  TASK\GO
end data tmp_uv-shift.init
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!
! using offset from uv_fit with E_gauss to shift phase center
!
say ".. make a new copy of UVT to be shifted with new phase center.."
sic copy 'UVTname'.uvt 'UVTname'.uv_shift.uvt

let uvshift%name 'UVTname'
let uvshift%relative no
let uvshift%offset 0 0               ! if using relative offset
let uvshift%ra 11:31:51.4553
let uvshift%dec  -12:31:58.2991
let uvshift%angle 0         ! rotate the UVT to new North
run uv_shift tmp_uv-shift.init /nowin

!
say "Fit Point-source model in UV plane after shifting"
!
let name 'UVTname'".uv_shift"
let first 0
let last 0
let uvfit%range 0 800
let uvfit%nf 1
let uvfit%funct01 POINT
let uvfit%param01 0.01 0.01 8E-6 0 0 0 0     ! parameters
let uvfit%range01 0 0 7E-6 0 0 0 0           ! starting range
let uvfit%start01 1 1 1 1 1 1 1              ! number of starts
let uvfit%subsf01 yes
run uv_fit tmp_uv-fit.init /nowindow
! check 'name'.uvfit (model) & 'name'-res.uvt (residual) after fit
! I-UV_FIT,  Creating fit table co21_trial1_cont.uv_shift.uvfit
! r.m.s.=     0.0124 Jy.
! POINT    R.A.        =    -0.20230 (   .10517)  11:31:51.4415
! POINT    DEC.        =     0.04198 (   .22342) -12:31:58.2571
! POINT    FLUX        =   824.72087 ( 88.54642)  microJy

! ------------------------------------------------------------

! image continuum again to get residual flux in map (lensing arc)

let name 'UVTname'".uv_shift-res"
go UVSTAT WEIGHT
input uv_map
let map_size 256
let map_cell 0.5
go uv_map

! I-CLEAN,  Beam is     4.43" by     1.93" at PA    12.02 deg.
! I-CLEAN,  Errors (    0.02)   (    0.01)      (    0.16)
! I-UVMAP,  Set type variable to lmv

! I-UVMAP,  Natural rms noise is    81.555 microJy/beam
! I-UVMAP,  Expected rms noise is    81.555 microJy/beam

! After subtracting the point source, the residual looks like noise..

! ------------------------------------------------------------
!
say "Fit again E)_GAUSS in UV plane after shifting"
!
let name 'UVTname'".uv_shift"
let first 0
let last 0
let uvfit%range 0 800
let uvfit%nf 1
let uvfit%funct01 E_Gauss
let uvfit%param01 1 1 3 4 3 3 1       ! parameters
let uvfit%range01 0 0 0 0 0 0 0       ! starting range
let uvfit%start01 1 1 1 1 1 1 1       ! number of starts
run uv_fit tmp_uv-fit.init /nowindow

! r.m.s.=     0.0124 Jy.
! E_GAUSS  R.A.        =    -0.00383 (   .18160)  11:31:51.4550
! E_GAUSS  Dec.        =     0.00111 (   .22602) -12:31:58.2980
! E_GAUSS  Flux        =     1.36260 (   .20820)  milliJy
! E_GAUSS  Major       =     3.01647 (365.39810)
! E_GAUSS  Minor       =     0.00587 (   .53198)
! E_GAUSS  Pos.Ang.    =   -72.77988 ( 15.48605)

!
say "Fit with C_GAUSS in UV plane after shifting"
!
let name 'UVTname'".uv_shift"
let first 0
let last 0
let uvfit%range 0 800
let uvfit%nf 1
let uvfit%funct01 C_Gauss
let uvfit%param01 1 1 3 4 3 3 1       ! parameters
let uvfit%range01 0 0 0 0 0 0 0       ! starting range
let uvfit%start01 1 1 1 1 1 1 1       ! number of starts
run uv_fit tmp_uv-fit.init /nowindow

! r.m.s.=     0.0124 Jy.
! R.A.        =    -0.10163 (   .14901)  11:31:51.4484
! Dec.        =     0.06940 (   .23643) -12:31:58.2297
! Flux        =     1.28496 (   .18507)  milliJy
! F.W.H.P.    =     2.14503 (   .40583)

!
say "Fit with Double E_Gauss in UV plane"
!
!
! `uv_fit` with more than one fit functions throws error when attempting to fit to the phase-center-shifted uvt
say " -- Fitting to UVT before shifting phase center -- "
let name 'UVTname'
let first 0
let last 0
let uvfit%range 0 800
let uvfit%nf 2
let uvfit%funct01 E_Gauss
let uvfit%param01 1 1 3 4 3 3 1       ! parameters
let uvfit%range01 0 0 0 0 0 0 0       ! starting range
let uvfit%start01 1 1 1 1 1 1 1       ! number of starts
let uvfit%funct02 E_Gauss
let uvfit%param02 1 1 3 4 3 3 1
let uvfit%range02 1 1 1 1 1 1 1
let uvfit%start02 1 1 1 1 1 1 1
run uv_fit tmp_uv-fit.init /nowindow
!
! r.m.s.=     0.0125 Jy.
! R.A.        =    -6.68012 (      Inf)  11:31:51.1438
! Dec.        =    42.77865 (      Inf) -12:31:14.2213
! Flux        =   324.12138 (      Inf)  Jy
! Major       =   616.19074 (      Inf)
! Minor       =   244.74343 (      Inf)
! Pos.Ang.    =     6.61935 (      Inf)
! R.A.        =     8.67984 (      Inf)  11:31:52.1928
! Dec.        =   -40.77913 (      Inf) -12:32:37.7791
! Flux        =  -324.12062 (      Inf)  Jy
! Major       =   624.19198 (      Inf)
! Minor       =   238.74247 (      Inf)
! Pos.Ang.    =    -0.55870 (      Inf)
